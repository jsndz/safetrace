services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    ports:
      - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
  alert:
    build:
      context: ./alert
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - KAFKA_BROKER=kafka:9092
    env_file:
      - ".env"
    depends_on:
      - kafka
  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - KAFKA_BROKER=kafka:9092
    env_file:
      - ".env"
    depends_on:
      - kafka
      - auth-db
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    environment:
      - KAFKA_BROKER=kafka:9092
    env_file:
      - ".env"
    depends_on:
      - gateway
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - KAFKA_BROKER=kafka:9092
    env_file:
      - ".env"
    depends_on:
      - kafka
      - auth
      - alert
      - geo-fencer
  geo-fencer:
    build:
      context: ./geo-fencer
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - KAFKA_BROKER=kafka:9092
    env_file:
      - ".env"
    depends_on:
      - kafka
      - fencer-db

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - KAFKA_BROKER=kafka:9092
    env_file:
      - ".env"
    depends_on:
      - kafka
  location-logger:
    build:
      context: ./location-logger
      dockerfile: Dockerfile
  auth-db:
    image: postgres:15
    container_name: auth-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: safetrace
      POSTGRES_DB: safetrace_auth
    volumes:
      - auth_pgdata:/var/lib/postgresql/data
    restart: unless-stopped
  fencer-db:
    image: postgres:15
    container_name: fencer-db
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: safetrace
      POSTGRES_DB: safetrace_fencer
    volumes:
      - fencer_pgdata:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  auth_pgdata:
  fencer_pgdata:
